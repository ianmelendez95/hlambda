-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------

state 35 contains 15 shift/reduce conflicts.
state 42 contains 1 shift/reduce conflicts.
state 62 contains 15 shift/reduce conflicts.
state 75 contains 1 shift/reduce conflicts.
state 76 contains 3 shift/reduce conflicts.
state 87 contains 1 shift/reduce conflicts.
state 89 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	%start_declParser -> decl                          (1)
	%start_expParser -> exp                            (2)
	program -> '{' stmts '}'                           (3)
	stmts -> stmts ';' stmt                            (4)
	stmts -> stmt                                      (5)
	stmt -> exp '::=' constructors                     (6)
	stmt -> var '::' typeExpr                          (7)
	stmt -> assignDef                                  (8)
	stmt -> exp                                        (9)
	assignDef -> exp '=' frhs maybeWhere               (10)
	assignDefs -> assignDefs ';' assignDef             (11)
	assignDefs -> assignDef                            (12)
	frhs -> frhs '=' clause                            (13)
	frhs -> clause                                     (14)
	clause -> exp                                      (15)
	clause -> exp ',' exp                              (16)
	maybeWhere -> 'where' whereDefs                    (17)
	maybeWhere ->                                      (18)
	whereDefs -> '{' assignDefs '}'                    (19)
	typeExpr -> var                                    (20)
	typeExpr -> constr typeExprs                       (21)
	typeExpr -> typeExpr '->' typeExpr                 (22)
	typeExpr -> '(' typeExpr ')'                       (23)
	typeExprs -> typeExprs typeExpr                    (24)
	typeExprs -> typeExpr                              (25)
	decl -> exp '::=' constructors                     (26)
	decl -> assignDef                                  (27)
	constructors -> constructors '|' exp               (28)
	constructors -> exp                                (29)
	exp -> apply                                       (30)
	exp -> infixApp                                    (31)
	exp -> term                                        (32)
	infixApp -> exp infixOp exp                        (33)
	apply -> exp term                                  (34)
	infixOp -> plus                                    (35)
	infixOp -> minus                                   (36)
	infixOp -> mult                                    (37)
	infixOp -> div                                     (38)
	infixOp -> equal                                   (39)
	infixOp -> lt                                      (40)
	infixOp -> gt                                      (41)
	infixOp -> ':'                                     (42)
	infixOp -> infix_var                               (43)
	term -> variable                                   (44)
	term -> specialLit                                 (45)
	term -> genTypeVar                                 (46)
	term -> constr                                     (47)
	term -> constant                                   (48)
	term -> '(' exp ')'                                (49)
	term -> infixOp                                    (50)
	variable -> var                                    (51)
	constant -> const                                  (52)
	genTypeVar -> gtype_2plus                          (53)
	specialLit -> listLit                              (54)
	specialLit -> tupleLit                             (55)
	listLit -> '[' ']'                                 (56)
	listLit -> '[' commaSepExp ']'                     (57)
	tupleLit -> '(' commaSepExp ')'                    (58)
	commaSepExp -> commaSepExp ',' exp                 (59)
	commaSepExp -> exp                                 (60)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'='            { T.Equal }
	'::='          { T.TypeEq }
	'::'           { T.DblColon }
	'->'           { T.Arrow }
	'('            { T.LP }
	')'            { T.RP }
	'['            { T.LB }
	']'            { T.RB }
	';'            { T.Semi }
	','            { T.Comma }
	'{'            { T.LC }
	'}'            { T.RC }
	'|'            { T.VertBar }
	'where'        { T.Where }
	plus           { T.InfixOp T.IPlus }
	minus          { T.InfixOp T.IMinus }
	mult           { T.InfixOp T.IMult }
	div            { T.InfixOp T.IDiv }
	equal          { T.InfixOp T.IEq }
	lt             { T.InfixOp T.ILt }
	gt             { T.InfixOp T.IGt }
	':'            { T.InfixOp T.ICons }
	infix_var      { T.InfixOp (T.IVar _) }
	const          { T.Constant $$ }
	constr         { T.Constructor $$ }
	var            { T.Variable $$ }
	gtype_2plus    { T.GenTypeVar $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	%start_declParser rule  1
	%start_expParser rule  2
	program         rule  3
	stmts           rules 4, 5
	stmt            rules 6, 7, 8, 9
	assignDef       rule  10
	assignDefs      rules 11, 12
	frhs            rules 13, 14
	clause          rules 15, 16
	maybeWhere      rules 17, 18
	whereDefs       rule  19
	typeExpr        rules 20, 21, 22, 23
	typeExprs       rules 24, 25
	decl            rules 26, 27
	constructors    rules 28, 29
	exp             rules 30, 31, 32
	infixApp        rule  33
	apply           rule  34
	infixOp         rules 35, 36, 37, 38, 39, 40, 41, 42, 43
	term            rules 44, 45, 46, 47, 48, 49, 50
	variable        rule  51
	constant        rule  52
	genTypeVar      rule  53
	specialLit      rules 54, 55
	listLit         rules 56, 57
	tupleLit        rule  58
	commaSepExp     rules 59, 60

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'{'            shift, and enter state 4

	program        goto state 34

State 1


	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	assignDef      goto state 31
	decl           goto state 32
	exp            goto state 33
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 2


	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	exp            goto state 5
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 3


	'{'            shift, and enter state 4


State 4

	program -> '{' . stmts '}'                          (rule 3)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 48
	gtype_2plus    shift, and enter state 30

	stmts          goto state 44
	stmt           goto state 45
	assignDef      goto state 46
	exp            goto state 47
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 5

	%start_expParser -> exp .                           (rule 2)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30
	%eof           accept

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 6

	exp -> infixApp .                                   (rule 31)

	'='            reduce using rule 31
	'::='          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	';'            reduce using rule 31
	','            reduce using rule 31
	'}'            reduce using rule 31
	'|'            reduce using rule 31
	'where'        reduce using rule 31
	plus           reduce using rule 31
	minus          reduce using rule 31
	mult           reduce using rule 31
	div            reduce using rule 31
	equal          reduce using rule 31
	lt             reduce using rule 31
	gt             reduce using rule 31
	':'            reduce using rule 31
	infix_var      reduce using rule 31
	const          reduce using rule 31
	constr         reduce using rule 31
	var            reduce using rule 31
	gtype_2plus    reduce using rule 31
	%eof           reduce using rule 31


State 7

	exp -> apply .                                      (rule 30)

	'='            reduce using rule 30
	'::='          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	';'            reduce using rule 30
	','            reduce using rule 30
	'}'            reduce using rule 30
	'|'            reduce using rule 30
	'where'        reduce using rule 30
	plus           reduce using rule 30
	minus          reduce using rule 30
	mult           reduce using rule 30
	div            reduce using rule 30
	equal          reduce using rule 30
	lt             reduce using rule 30
	gt             reduce using rule 30
	':'            reduce using rule 30
	infix_var      reduce using rule 30
	const          reduce using rule 30
	constr         reduce using rule 30
	var            reduce using rule 30
	gtype_2plus    reduce using rule 30
	%eof           reduce using rule 30


State 8

	term -> infixOp .                                   (rule 50)

	'='            reduce using rule 50
	'::='          reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	'}'            reduce using rule 50
	'|'            reduce using rule 50
	'where'        reduce using rule 50
	plus           reduce using rule 50
	minus          reduce using rule 50
	mult           reduce using rule 50
	div            reduce using rule 50
	equal          reduce using rule 50
	lt             reduce using rule 50
	gt             reduce using rule 50
	':'            reduce using rule 50
	infix_var      reduce using rule 50
	const          reduce using rule 50
	constr         reduce using rule 50
	var            reduce using rule 50
	gtype_2plus    reduce using rule 50
	%eof           reduce using rule 50


State 9

	exp -> term .                                       (rule 32)

	'='            reduce using rule 32
	'::='          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	';'            reduce using rule 32
	','            reduce using rule 32
	'}'            reduce using rule 32
	'|'            reduce using rule 32
	'where'        reduce using rule 32
	plus           reduce using rule 32
	minus          reduce using rule 32
	mult           reduce using rule 32
	div            reduce using rule 32
	equal          reduce using rule 32
	lt             reduce using rule 32
	gt             reduce using rule 32
	':'            reduce using rule 32
	infix_var      reduce using rule 32
	const          reduce using rule 32
	constr         reduce using rule 32
	var            reduce using rule 32
	gtype_2plus    reduce using rule 32
	%eof           reduce using rule 32


State 10

	term -> variable .                                  (rule 44)

	'='            reduce using rule 44
	'::='          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	';'            reduce using rule 44
	','            reduce using rule 44
	'}'            reduce using rule 44
	'|'            reduce using rule 44
	'where'        reduce using rule 44
	plus           reduce using rule 44
	minus          reduce using rule 44
	mult           reduce using rule 44
	div            reduce using rule 44
	equal          reduce using rule 44
	lt             reduce using rule 44
	gt             reduce using rule 44
	':'            reduce using rule 44
	infix_var      reduce using rule 44
	const          reduce using rule 44
	constr         reduce using rule 44
	var            reduce using rule 44
	gtype_2plus    reduce using rule 44
	%eof           reduce using rule 44


State 11

	term -> constant .                                  (rule 48)

	'='            reduce using rule 48
	'::='          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	';'            reduce using rule 48
	','            reduce using rule 48
	'}'            reduce using rule 48
	'|'            reduce using rule 48
	'where'        reduce using rule 48
	plus           reduce using rule 48
	minus          reduce using rule 48
	mult           reduce using rule 48
	div            reduce using rule 48
	equal          reduce using rule 48
	lt             reduce using rule 48
	gt             reduce using rule 48
	':'            reduce using rule 48
	infix_var      reduce using rule 48
	const          reduce using rule 48
	constr         reduce using rule 48
	var            reduce using rule 48
	gtype_2plus    reduce using rule 48
	%eof           reduce using rule 48


State 12

	term -> genTypeVar .                                (rule 46)

	'='            reduce using rule 46
	'::='          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	';'            reduce using rule 46
	','            reduce using rule 46
	'}'            reduce using rule 46
	'|'            reduce using rule 46
	'where'        reduce using rule 46
	plus           reduce using rule 46
	minus          reduce using rule 46
	mult           reduce using rule 46
	div            reduce using rule 46
	equal          reduce using rule 46
	lt             reduce using rule 46
	gt             reduce using rule 46
	':'            reduce using rule 46
	infix_var      reduce using rule 46
	const          reduce using rule 46
	constr         reduce using rule 46
	var            reduce using rule 46
	gtype_2plus    reduce using rule 46
	%eof           reduce using rule 46


State 13

	term -> specialLit .                                (rule 45)

	'='            reduce using rule 45
	'::='          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	';'            reduce using rule 45
	','            reduce using rule 45
	'}'            reduce using rule 45
	'|'            reduce using rule 45
	'where'        reduce using rule 45
	plus           reduce using rule 45
	minus          reduce using rule 45
	mult           reduce using rule 45
	div            reduce using rule 45
	equal          reduce using rule 45
	lt             reduce using rule 45
	gt             reduce using rule 45
	':'            reduce using rule 45
	infix_var      reduce using rule 45
	const          reduce using rule 45
	constr         reduce using rule 45
	var            reduce using rule 45
	gtype_2plus    reduce using rule 45
	%eof           reduce using rule 45


State 14

	specialLit -> listLit .                             (rule 54)

	'='            reduce using rule 54
	'::='          reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54
	'}'            reduce using rule 54
	'|'            reduce using rule 54
	'where'        reduce using rule 54
	plus           reduce using rule 54
	minus          reduce using rule 54
	mult           reduce using rule 54
	div            reduce using rule 54
	equal          reduce using rule 54
	lt             reduce using rule 54
	gt             reduce using rule 54
	':'            reduce using rule 54
	infix_var      reduce using rule 54
	const          reduce using rule 54
	constr         reduce using rule 54
	var            reduce using rule 54
	gtype_2plus    reduce using rule 54
	%eof           reduce using rule 54


State 15

	specialLit -> tupleLit .                            (rule 55)

	'='            reduce using rule 55
	'::='          reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	'}'            reduce using rule 55
	'|'            reduce using rule 55
	'where'        reduce using rule 55
	plus           reduce using rule 55
	minus          reduce using rule 55
	mult           reduce using rule 55
	div            reduce using rule 55
	equal          reduce using rule 55
	lt             reduce using rule 55
	gt             reduce using rule 55
	':'            reduce using rule 55
	infix_var      reduce using rule 55
	const          reduce using rule 55
	constr         reduce using rule 55
	var            reduce using rule 55
	gtype_2plus    reduce using rule 55
	%eof           reduce using rule 55


State 16

	term -> '(' . exp ')'                               (rule 49)
	tupleLit -> '(' . commaSepExp ')'                   (rule 58)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	exp            goto state 42
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15
	commaSepExp    goto state 43

State 17

	listLit -> '[' . ']'                                (rule 56)
	listLit -> '[' . commaSepExp ']'                    (rule 57)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	']'            shift, and enter state 41
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	exp            goto state 39
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15
	commaSepExp    goto state 40

State 18

	infixOp -> plus .                                   (rule 35)

	'='            reduce using rule 35
	'::='          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	';'            reduce using rule 35
	','            reduce using rule 35
	'}'            reduce using rule 35
	'|'            reduce using rule 35
	'where'        reduce using rule 35
	plus           reduce using rule 35
	minus          reduce using rule 35
	mult           reduce using rule 35
	div            reduce using rule 35
	equal          reduce using rule 35
	lt             reduce using rule 35
	gt             reduce using rule 35
	':'            reduce using rule 35
	infix_var      reduce using rule 35
	const          reduce using rule 35
	constr         reduce using rule 35
	var            reduce using rule 35
	gtype_2plus    reduce using rule 35
	%eof           reduce using rule 35


State 19

	infixOp -> minus .                                  (rule 36)

	'='            reduce using rule 36
	'::='          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	';'            reduce using rule 36
	','            reduce using rule 36
	'}'            reduce using rule 36
	'|'            reduce using rule 36
	'where'        reduce using rule 36
	plus           reduce using rule 36
	minus          reduce using rule 36
	mult           reduce using rule 36
	div            reduce using rule 36
	equal          reduce using rule 36
	lt             reduce using rule 36
	gt             reduce using rule 36
	':'            reduce using rule 36
	infix_var      reduce using rule 36
	const          reduce using rule 36
	constr         reduce using rule 36
	var            reduce using rule 36
	gtype_2plus    reduce using rule 36
	%eof           reduce using rule 36


State 20

	infixOp -> mult .                                   (rule 37)

	'='            reduce using rule 37
	'::='          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	';'            reduce using rule 37
	','            reduce using rule 37
	'}'            reduce using rule 37
	'|'            reduce using rule 37
	'where'        reduce using rule 37
	plus           reduce using rule 37
	minus          reduce using rule 37
	mult           reduce using rule 37
	div            reduce using rule 37
	equal          reduce using rule 37
	lt             reduce using rule 37
	gt             reduce using rule 37
	':'            reduce using rule 37
	infix_var      reduce using rule 37
	const          reduce using rule 37
	constr         reduce using rule 37
	var            reduce using rule 37
	gtype_2plus    reduce using rule 37
	%eof           reduce using rule 37


State 21

	infixOp -> div .                                    (rule 38)

	'='            reduce using rule 38
	'::='          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	';'            reduce using rule 38
	','            reduce using rule 38
	'}'            reduce using rule 38
	'|'            reduce using rule 38
	'where'        reduce using rule 38
	plus           reduce using rule 38
	minus          reduce using rule 38
	mult           reduce using rule 38
	div            reduce using rule 38
	equal          reduce using rule 38
	lt             reduce using rule 38
	gt             reduce using rule 38
	':'            reduce using rule 38
	infix_var      reduce using rule 38
	const          reduce using rule 38
	constr         reduce using rule 38
	var            reduce using rule 38
	gtype_2plus    reduce using rule 38
	%eof           reduce using rule 38


State 22

	infixOp -> equal .                                  (rule 39)

	'='            reduce using rule 39
	'::='          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	';'            reduce using rule 39
	','            reduce using rule 39
	'}'            reduce using rule 39
	'|'            reduce using rule 39
	'where'        reduce using rule 39
	plus           reduce using rule 39
	minus          reduce using rule 39
	mult           reduce using rule 39
	div            reduce using rule 39
	equal          reduce using rule 39
	lt             reduce using rule 39
	gt             reduce using rule 39
	':'            reduce using rule 39
	infix_var      reduce using rule 39
	const          reduce using rule 39
	constr         reduce using rule 39
	var            reduce using rule 39
	gtype_2plus    reduce using rule 39
	%eof           reduce using rule 39


State 23

	infixOp -> lt .                                     (rule 40)

	'='            reduce using rule 40
	'::='          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	';'            reduce using rule 40
	','            reduce using rule 40
	'}'            reduce using rule 40
	'|'            reduce using rule 40
	'where'        reduce using rule 40
	plus           reduce using rule 40
	minus          reduce using rule 40
	mult           reduce using rule 40
	div            reduce using rule 40
	equal          reduce using rule 40
	lt             reduce using rule 40
	gt             reduce using rule 40
	':'            reduce using rule 40
	infix_var      reduce using rule 40
	const          reduce using rule 40
	constr         reduce using rule 40
	var            reduce using rule 40
	gtype_2plus    reduce using rule 40
	%eof           reduce using rule 40


State 24

	infixOp -> gt .                                     (rule 41)

	'='            reduce using rule 41
	'::='          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	';'            reduce using rule 41
	','            reduce using rule 41
	'}'            reduce using rule 41
	'|'            reduce using rule 41
	'where'        reduce using rule 41
	plus           reduce using rule 41
	minus          reduce using rule 41
	mult           reduce using rule 41
	div            reduce using rule 41
	equal          reduce using rule 41
	lt             reduce using rule 41
	gt             reduce using rule 41
	':'            reduce using rule 41
	infix_var      reduce using rule 41
	const          reduce using rule 41
	constr         reduce using rule 41
	var            reduce using rule 41
	gtype_2plus    reduce using rule 41
	%eof           reduce using rule 41


State 25

	infixOp -> ':' .                                    (rule 42)

	'='            reduce using rule 42
	'::='          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	';'            reduce using rule 42
	','            reduce using rule 42
	'}'            reduce using rule 42
	'|'            reduce using rule 42
	'where'        reduce using rule 42
	plus           reduce using rule 42
	minus          reduce using rule 42
	mult           reduce using rule 42
	div            reduce using rule 42
	equal          reduce using rule 42
	lt             reduce using rule 42
	gt             reduce using rule 42
	':'            reduce using rule 42
	infix_var      reduce using rule 42
	const          reduce using rule 42
	constr         reduce using rule 42
	var            reduce using rule 42
	gtype_2plus    reduce using rule 42
	%eof           reduce using rule 42


State 26

	infixOp -> infix_var .                              (rule 43)

	'='            reduce using rule 43
	'::='          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	';'            reduce using rule 43
	','            reduce using rule 43
	'}'            reduce using rule 43
	'|'            reduce using rule 43
	'where'        reduce using rule 43
	plus           reduce using rule 43
	minus          reduce using rule 43
	mult           reduce using rule 43
	div            reduce using rule 43
	equal          reduce using rule 43
	lt             reduce using rule 43
	gt             reduce using rule 43
	':'            reduce using rule 43
	infix_var      reduce using rule 43
	const          reduce using rule 43
	constr         reduce using rule 43
	var            reduce using rule 43
	gtype_2plus    reduce using rule 43
	%eof           reduce using rule 43


State 27

	constant -> const .                                 (rule 52)

	'='            reduce using rule 52
	'::='          reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'}'            reduce using rule 52
	'|'            reduce using rule 52
	'where'        reduce using rule 52
	plus           reduce using rule 52
	minus          reduce using rule 52
	mult           reduce using rule 52
	div            reduce using rule 52
	equal          reduce using rule 52
	lt             reduce using rule 52
	gt             reduce using rule 52
	':'            reduce using rule 52
	infix_var      reduce using rule 52
	const          reduce using rule 52
	constr         reduce using rule 52
	var            reduce using rule 52
	gtype_2plus    reduce using rule 52
	%eof           reduce using rule 52


State 28

	term -> constr .                                    (rule 47)

	'='            reduce using rule 47
	'::='          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	';'            reduce using rule 47
	','            reduce using rule 47
	'}'            reduce using rule 47
	'|'            reduce using rule 47
	'where'        reduce using rule 47
	plus           reduce using rule 47
	minus          reduce using rule 47
	mult           reduce using rule 47
	div            reduce using rule 47
	equal          reduce using rule 47
	lt             reduce using rule 47
	gt             reduce using rule 47
	':'            reduce using rule 47
	infix_var      reduce using rule 47
	const          reduce using rule 47
	constr         reduce using rule 47
	var            reduce using rule 47
	gtype_2plus    reduce using rule 47
	%eof           reduce using rule 47


State 29

	variable -> var .                                   (rule 51)

	'='            reduce using rule 51
	'::='          reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	'}'            reduce using rule 51
	'|'            reduce using rule 51
	'where'        reduce using rule 51
	plus           reduce using rule 51
	minus          reduce using rule 51
	mult           reduce using rule 51
	div            reduce using rule 51
	equal          reduce using rule 51
	lt             reduce using rule 51
	gt             reduce using rule 51
	':'            reduce using rule 51
	infix_var      reduce using rule 51
	const          reduce using rule 51
	constr         reduce using rule 51
	var            reduce using rule 51
	gtype_2plus    reduce using rule 51
	%eof           reduce using rule 51


State 30

	genTypeVar -> gtype_2plus .                         (rule 53)

	'='            reduce using rule 53
	'::='          reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53
	'}'            reduce using rule 53
	'|'            reduce using rule 53
	'where'        reduce using rule 53
	plus           reduce using rule 53
	minus          reduce using rule 53
	mult           reduce using rule 53
	div            reduce using rule 53
	equal          reduce using rule 53
	lt             reduce using rule 53
	gt             reduce using rule 53
	':'            reduce using rule 53
	infix_var      reduce using rule 53
	const          reduce using rule 53
	constr         reduce using rule 53
	var            reduce using rule 53
	gtype_2plus    reduce using rule 53
	%eof           reduce using rule 53


State 31

	decl -> assignDef .                                 (rule 27)

	%eof           reduce using rule 27


State 32

	%start_declParser -> decl .                         (rule 1)

	%eof           accept


State 33

	assignDef -> exp . '=' frhs maybeWhere              (rule 10)
	decl -> exp . '::=' constructors                    (rule 26)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'='            shift, and enter state 37
	'::='          shift, and enter state 38
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 34

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 35

	infixApp -> exp infixOp . exp                       (rule 33)
	term -> infixOp .                                   (rule 50)

	'='            reduce using rule 50
	'::='          reduce using rule 50
	'('            shift, and enter state 16
			(reduce using rule 50)

	')'            reduce using rule 50
	'['            shift, and enter state 17
			(reduce using rule 50)

	']'            reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	'}'            reduce using rule 50
	'|'            reduce using rule 50
	'where'        reduce using rule 50
	plus           shift, and enter state 18
			(reduce using rule 50)

	minus          shift, and enter state 19
			(reduce using rule 50)

	mult           shift, and enter state 20
			(reduce using rule 50)

	div            shift, and enter state 21
			(reduce using rule 50)

	equal          shift, and enter state 22
			(reduce using rule 50)

	lt             shift, and enter state 23
			(reduce using rule 50)

	gt             shift, and enter state 24
			(reduce using rule 50)

	':'            shift, and enter state 25
			(reduce using rule 50)

	infix_var      shift, and enter state 26
			(reduce using rule 50)

	const          shift, and enter state 27
			(reduce using rule 50)

	constr         shift, and enter state 28
			(reduce using rule 50)

	var            shift, and enter state 29
			(reduce using rule 50)

	gtype_2plus    shift, and enter state 30
			(reduce using rule 50)

	%eof           reduce using rule 50

	exp            goto state 62
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 36

	apply -> exp term .                                 (rule 34)

	'='            reduce using rule 34
	'::='          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	';'            reduce using rule 34
	','            reduce using rule 34
	'}'            reduce using rule 34
	'|'            reduce using rule 34
	'where'        reduce using rule 34
	plus           reduce using rule 34
	minus          reduce using rule 34
	mult           reduce using rule 34
	div            reduce using rule 34
	equal          reduce using rule 34
	lt             reduce using rule 34
	gt             reduce using rule 34
	':'            reduce using rule 34
	infix_var      reduce using rule 34
	const          reduce using rule 34
	constr         reduce using rule 34
	var            reduce using rule 34
	gtype_2plus    reduce using rule 34
	%eof           reduce using rule 34


State 37

	assignDef -> exp '=' . frhs maybeWhere              (rule 10)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	frhs           goto state 59
	clause         goto state 60
	exp            goto state 61
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 38

	decl -> exp '::=' . constructors                    (rule 26)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	constructors   goto state 57
	exp            goto state 58
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 39

	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)
	commaSepExp -> exp .                                (rule 60)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	']'            reduce using rule 60
	','            reduce using rule 60
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 40

	listLit -> '[' commaSepExp . ']'                    (rule 57)
	commaSepExp -> commaSepExp . ',' exp                (rule 59)

	']'            shift, and enter state 56
	','            shift, and enter state 54


State 41

	listLit -> '[' ']' .                                (rule 56)

	'='            reduce using rule 56
	'::='          reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	'}'            reduce using rule 56
	'|'            reduce using rule 56
	'where'        reduce using rule 56
	plus           reduce using rule 56
	minus          reduce using rule 56
	mult           reduce using rule 56
	div            reduce using rule 56
	equal          reduce using rule 56
	lt             reduce using rule 56
	gt             reduce using rule 56
	':'            reduce using rule 56
	infix_var      reduce using rule 56
	const          reduce using rule 56
	constr         reduce using rule 56
	var            reduce using rule 56
	gtype_2plus    reduce using rule 56
	%eof           reduce using rule 56


State 42

	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)
	term -> '(' exp . ')'                               (rule 49)
	commaSepExp -> exp .                                (rule 60)

	'('            shift, and enter state 16
	')'            shift, and enter state 55
			(reduce using rule 60)

	'['            shift, and enter state 17
	','            reduce using rule 60
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 43

	tupleLit -> '(' commaSepExp . ')'                   (rule 58)
	commaSepExp -> commaSepExp . ',' exp                (rule 59)

	')'            shift, and enter state 53
	','            shift, and enter state 54


State 44

	program -> '{' stmts . '}'                          (rule 3)
	stmts -> stmts . ';' stmt                           (rule 4)

	';'            shift, and enter state 51
	'}'            shift, and enter state 52


State 45

	stmts -> stmt .                                     (rule 5)

	';'            reduce using rule 5
	'}'            reduce using rule 5


State 46

	stmt -> assignDef .                                 (rule 8)

	';'            reduce using rule 8
	'}'            reduce using rule 8


State 47

	stmt -> exp . '::=' constructors                    (rule 6)
	stmt -> exp .                                       (rule 9)
	assignDef -> exp . '=' frhs maybeWhere              (rule 10)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'='            shift, and enter state 37
	'::='          shift, and enter state 50
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	';'            reduce using rule 9
	'}'            reduce using rule 9
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 48

	stmt -> var . '::' typeExpr                         (rule 7)
	variable -> var .                                   (rule 51)

	'='            reduce using rule 51
	'::='          reduce using rule 51
	'::'           shift, and enter state 49
	'('            reduce using rule 51
	'['            reduce using rule 51
	';'            reduce using rule 51
	'}'            reduce using rule 51
	plus           reduce using rule 51
	minus          reduce using rule 51
	mult           reduce using rule 51
	div            reduce using rule 51
	equal          reduce using rule 51
	lt             reduce using rule 51
	gt             reduce using rule 51
	':'            reduce using rule 51
	infix_var      reduce using rule 51
	const          reduce using rule 51
	constr         reduce using rule 51
	var            reduce using rule 51
	gtype_2plus    reduce using rule 51


State 49

	stmt -> var '::' . typeExpr                         (rule 7)

	'('            shift, and enter state 72
	constr         shift, and enter state 73
	var            shift, and enter state 74

	typeExpr       goto state 71

State 50

	stmt -> exp '::=' . constructors                    (rule 6)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	constructors   goto state 70
	exp            goto state 58
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 51

	stmts -> stmts ';' . stmt                           (rule 4)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 48
	gtype_2plus    shift, and enter state 30

	stmt           goto state 69
	assignDef      goto state 46
	exp            goto state 47
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 52

	program -> '{' stmts '}' .                          (rule 3)

	%eof           reduce using rule 3


State 53

	tupleLit -> '(' commaSepExp ')' .                   (rule 58)

	'='            reduce using rule 58
	'::='          reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	';'            reduce using rule 58
	','            reduce using rule 58
	'}'            reduce using rule 58
	'|'            reduce using rule 58
	'where'        reduce using rule 58
	plus           reduce using rule 58
	minus          reduce using rule 58
	mult           reduce using rule 58
	div            reduce using rule 58
	equal          reduce using rule 58
	lt             reduce using rule 58
	gt             reduce using rule 58
	':'            reduce using rule 58
	infix_var      reduce using rule 58
	const          reduce using rule 58
	constr         reduce using rule 58
	var            reduce using rule 58
	gtype_2plus    reduce using rule 58
	%eof           reduce using rule 58


State 54

	commaSepExp -> commaSepExp ',' . exp                (rule 59)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	exp            goto state 68
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 55

	term -> '(' exp ')' .                               (rule 49)

	'='            reduce using rule 49
	'::='          reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	';'            reduce using rule 49
	','            reduce using rule 49
	'}'            reduce using rule 49
	'|'            reduce using rule 49
	'where'        reduce using rule 49
	plus           reduce using rule 49
	minus          reduce using rule 49
	mult           reduce using rule 49
	div            reduce using rule 49
	equal          reduce using rule 49
	lt             reduce using rule 49
	gt             reduce using rule 49
	':'            reduce using rule 49
	infix_var      reduce using rule 49
	const          reduce using rule 49
	constr         reduce using rule 49
	var            reduce using rule 49
	gtype_2plus    reduce using rule 49
	%eof           reduce using rule 49


State 56

	listLit -> '[' commaSepExp ']' .                    (rule 57)

	'='            reduce using rule 57
	'::='          reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	';'            reduce using rule 57
	','            reduce using rule 57
	'}'            reduce using rule 57
	'|'            reduce using rule 57
	'where'        reduce using rule 57
	plus           reduce using rule 57
	minus          reduce using rule 57
	mult           reduce using rule 57
	div            reduce using rule 57
	equal          reduce using rule 57
	lt             reduce using rule 57
	gt             reduce using rule 57
	':'            reduce using rule 57
	infix_var      reduce using rule 57
	const          reduce using rule 57
	constr         reduce using rule 57
	var            reduce using rule 57
	gtype_2plus    reduce using rule 57
	%eof           reduce using rule 57


State 57

	decl -> exp '::=' constructors .                    (rule 26)
	constructors -> constructors . '|' exp              (rule 28)

	'|'            shift, and enter state 67
	%eof           reduce using rule 26


State 58

	constructors -> exp .                               (rule 29)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	';'            reduce using rule 29
	'}'            reduce using rule 29
	'|'            reduce using rule 29
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30
	%eof           reduce using rule 29

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 59

	assignDef -> exp '=' frhs . maybeWhere              (rule 10)
	frhs -> frhs . '=' clause                           (rule 13)

	'='            shift, and enter state 65
	';'            reduce using rule 18
	'}'            reduce using rule 18
	'where'        shift, and enter state 66
	%eof           reduce using rule 18

	maybeWhere     goto state 64

State 60

	frhs -> clause .                                    (rule 14)

	'='            reduce using rule 14
	';'            reduce using rule 14
	'}'            reduce using rule 14
	'where'        reduce using rule 14
	%eof           reduce using rule 14


State 61

	clause -> exp .                                     (rule 15)
	clause -> exp . ',' exp                             (rule 16)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'='            reduce using rule 15
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	';'            reduce using rule 15
	','            shift, and enter state 63
	'}'            reduce using rule 15
	'where'        reduce using rule 15
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30
	%eof           reduce using rule 15

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 62

	infixApp -> exp . infixOp exp                       (rule 33)
	infixApp -> exp infixOp exp .                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'='            reduce using rule 33
	'::='          reduce using rule 33
	'('            shift, and enter state 16
			(reduce using rule 33)

	')'            reduce using rule 33
	'['            shift, and enter state 17
			(reduce using rule 33)

	']'            reduce using rule 33
	';'            reduce using rule 33
	','            reduce using rule 33
	'}'            reduce using rule 33
	'|'            reduce using rule 33
	'where'        reduce using rule 33
	plus           shift, and enter state 18
			(reduce using rule 33)

	minus          shift, and enter state 19
			(reduce using rule 33)

	mult           shift, and enter state 20
			(reduce using rule 33)

	div            shift, and enter state 21
			(reduce using rule 33)

	equal          shift, and enter state 22
			(reduce using rule 33)

	lt             shift, and enter state 23
			(reduce using rule 33)

	gt             shift, and enter state 24
			(reduce using rule 33)

	':'            shift, and enter state 25
			(reduce using rule 33)

	infix_var      shift, and enter state 26
			(reduce using rule 33)

	const          shift, and enter state 27
			(reduce using rule 33)

	constr         shift, and enter state 28
			(reduce using rule 33)

	var            shift, and enter state 29
			(reduce using rule 33)

	gtype_2plus    shift, and enter state 30
			(reduce using rule 33)

	%eof           reduce using rule 33

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 63

	clause -> exp ',' . exp                             (rule 16)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	exp            goto state 83
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 64

	assignDef -> exp '=' frhs maybeWhere .              (rule 10)

	';'            reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 65

	frhs -> frhs '=' . clause                           (rule 13)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	clause         goto state 82
	exp            goto state 61
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 66

	maybeWhere -> 'where' . whereDefs                   (rule 17)

	'{'            shift, and enter state 81

	whereDefs      goto state 80

State 67

	constructors -> constructors '|' . exp              (rule 28)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	exp            goto state 79
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 68

	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)
	commaSepExp -> commaSepExp ',' exp .                (rule 59)

	'('            shift, and enter state 16
	')'            reduce using rule 59
	'['            shift, and enter state 17
	']'            reduce using rule 59
	','            reduce using rule 59
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 69

	stmts -> stmts ';' stmt .                           (rule 4)

	';'            reduce using rule 4
	'}'            reduce using rule 4


State 70

	stmt -> exp '::=' constructors .                    (rule 6)
	constructors -> constructors . '|' exp              (rule 28)

	';'            reduce using rule 6
	'}'            reduce using rule 6
	'|'            shift, and enter state 67


State 71

	stmt -> var '::' typeExpr .                         (rule 7)
	typeExpr -> typeExpr . '->' typeExpr                (rule 22)

	'->'           shift, and enter state 78
	';'            reduce using rule 7
	'}'            reduce using rule 7


State 72

	typeExpr -> '(' . typeExpr ')'                      (rule 23)

	'('            shift, and enter state 72
	constr         shift, and enter state 73
	var            shift, and enter state 74

	typeExpr       goto state 77

State 73

	typeExpr -> constr . typeExprs                      (rule 21)

	'('            shift, and enter state 72
	constr         shift, and enter state 73
	var            shift, and enter state 74

	typeExpr       goto state 75
	typeExprs      goto state 76

State 74

	typeExpr -> var .                                   (rule 20)

	'->'           reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	';'            reduce using rule 20
	'}'            reduce using rule 20
	constr         reduce using rule 20
	var            reduce using rule 20


State 75

	typeExpr -> typeExpr . '->' typeExpr                (rule 22)
	typeExprs -> typeExpr .                             (rule 25)

	'->'           shift, and enter state 78
			(reduce using rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	';'            reduce using rule 25
	'}'            reduce using rule 25
	constr         reduce using rule 25
	var            reduce using rule 25


State 76

	typeExpr -> constr typeExprs .                      (rule 21)
	typeExprs -> typeExprs . typeExpr                   (rule 24)

	'->'           reduce using rule 21
	'('            shift, and enter state 72
			(reduce using rule 21)

	')'            reduce using rule 21
	';'            reduce using rule 21
	'}'            reduce using rule 21
	constr         shift, and enter state 73
			(reduce using rule 21)

	var            shift, and enter state 74
			(reduce using rule 21)


	typeExpr       goto state 89

State 77

	typeExpr -> typeExpr . '->' typeExpr                (rule 22)
	typeExpr -> '(' typeExpr . ')'                      (rule 23)

	'->'           shift, and enter state 78
	')'            shift, and enter state 88


State 78

	typeExpr -> typeExpr '->' . typeExpr                (rule 22)

	'('            shift, and enter state 72
	constr         shift, and enter state 73
	var            shift, and enter state 74

	typeExpr       goto state 87

State 79

	constructors -> constructors '|' exp .              (rule 28)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	';'            reduce using rule 28
	'}'            reduce using rule 28
	'|'            reduce using rule 28
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30
	%eof           reduce using rule 28

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 80

	maybeWhere -> 'where' whereDefs .                   (rule 17)

	';'            reduce using rule 17
	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 81

	whereDefs -> '{' . assignDefs '}'                   (rule 19)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	assignDef      goto state 84
	assignDefs     goto state 85
	exp            goto state 86
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 82

	frhs -> frhs '=' clause .                           (rule 13)

	'='            reduce using rule 13
	';'            reduce using rule 13
	'}'            reduce using rule 13
	'where'        reduce using rule 13
	%eof           reduce using rule 13


State 83

	clause -> exp ',' exp .                             (rule 16)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'='            reduce using rule 16
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	';'            reduce using rule 16
	'}'            reduce using rule 16
	'where'        reduce using rule 16
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30
	%eof           reduce using rule 16

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 84

	assignDefs -> assignDef .                           (rule 12)

	';'            reduce using rule 12
	'}'            reduce using rule 12


State 85

	assignDefs -> assignDefs . ';' assignDef            (rule 11)
	whereDefs -> '{' assignDefs . '}'                   (rule 19)

	';'            shift, and enter state 90
	'}'            shift, and enter state 91


State 86

	assignDef -> exp . '=' frhs maybeWhere              (rule 10)
	infixApp -> exp . infixOp exp                       (rule 33)
	apply -> exp . term                                 (rule 34)

	'='            shift, and enter state 37
	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	infixOp        goto state 35
	term           goto state 36
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 87

	typeExpr -> typeExpr . '->' typeExpr                (rule 22)
	typeExpr -> typeExpr '->' typeExpr .                (rule 22)

	'->'           shift, and enter state 78
			(reduce using rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	';'            reduce using rule 22
	'}'            reduce using rule 22
	constr         reduce using rule 22
	var            reduce using rule 22


State 88

	typeExpr -> '(' typeExpr ')' .                      (rule 23)

	'->'           reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	';'            reduce using rule 23
	'}'            reduce using rule 23
	constr         reduce using rule 23
	var            reduce using rule 23


State 89

	typeExpr -> typeExpr . '->' typeExpr                (rule 22)
	typeExprs -> typeExprs typeExpr .                   (rule 24)

	'->'           shift, and enter state 78
			(reduce using rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	';'            reduce using rule 24
	'}'            reduce using rule 24
	constr         reduce using rule 24
	var            reduce using rule 24


State 90

	assignDefs -> assignDefs ';' . assignDef            (rule 11)

	'('            shift, and enter state 16
	'['            shift, and enter state 17
	plus           shift, and enter state 18
	minus          shift, and enter state 19
	mult           shift, and enter state 20
	div            shift, and enter state 21
	equal          shift, and enter state 22
	lt             shift, and enter state 23
	gt             shift, and enter state 24
	':'            shift, and enter state 25
	infix_var      shift, and enter state 26
	const          shift, and enter state 27
	constr         shift, and enter state 28
	var            shift, and enter state 29
	gtype_2plus    shift, and enter state 30

	assignDef      goto state 92
	exp            goto state 86
	infixApp       goto state 6
	apply          goto state 7
	infixOp        goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	genTypeVar     goto state 12
	specialLit     goto state 13
	listLit        goto state 14
	tupleLit       goto state 15

State 91

	whereDefs -> '{' assignDefs '}' .                   (rule 19)

	';'            reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19


State 92

	assignDefs -> assignDefs ';' assignDef .            (rule 11)

	';'            reduce using rule 11
	'}'            reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 61
Number of terminals: 27
Number of non-terminals: 28
Number of states: 93
